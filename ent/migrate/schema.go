// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// EmbeddingsColumns holds the columns for the "embeddings" table.
	EmbeddingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "embedding", Type: field.TypeOther, SchemaType: map[string]string{"postgres": "vector(1536)"}},
		{Name: "embedding_prescription", Type: field.TypeUUID},
	}
	// EmbeddingsTable holds the schema information for the "embeddings" table.
	EmbeddingsTable = &schema.Table{
		Name:       "embeddings",
		Columns:    EmbeddingsColumns,
		PrimaryKey: []*schema.Column{EmbeddingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "embeddings_prescriptions_prescription",
				Columns:    []*schema.Column{EmbeddingsColumns[2]},
				RefColumns: []*schema.Column{PrescriptionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "embedding_embedding",
				Unique:  false,
				Columns: []*schema.Column{EmbeddingsColumns[1]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "vector_l2_ops",
					Type:    "hnsw",
				},
			},
		},
	}
	// PrescriptionsColumns holds the columns for the "prescriptions" table.
	PrescriptionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "file_id", Type: field.TypeString},
		{Name: "mime_type", Type: field.TypeString},
		{Name: "content", Type: field.TypeJSON},
	}
	// PrescriptionsTable holds the schema information for the "prescriptions" table.
	PrescriptionsTable = &schema.Table{
		Name:       "prescriptions",
		Columns:    PrescriptionsColumns,
		PrimaryKey: []*schema.Column{PrescriptionsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		EmbeddingsTable,
		PrescriptionsTable,
	}
)

func init() {
	EmbeddingsTable.ForeignKeys[0].RefTable = PrescriptionsTable
}
